package main

//简介
//函数是go语言的一级公民，包含函数的名称、参数列表和返回值类型，这些构成函数的签名(signature)

//go语言函数特性
/*
	1.go语言中有三种函数：普通函数、匿名函数、方法（定义在struct上的函数）
	2.go语言中不允许函数重载（overload),也就是说不允许函数同名
	3.go语言中的函数不能嵌套函数，但可以嵌套匿名函数
	4.函数是一个值，可以将函数赋值给变量，使得这个变量也成为函数
	5.函数可以作为参数传给另一个函数
	6.函数的返回值可以是一个函数
	7.函数调用的时候，如果有参数传递给函数，则先拷贝参数的副本，再将副本传递给函数
	8.函数参数可以没有名称
*/

//传参
//go语言是通过传值的方式传参的，意味着传递给函数的是拷贝后的副本，所以函数内部访问，修改的也是这个副本
/*go语言可以使用变长参数，有时候并不能确定参数的个数，可以使用变长参数，可以在函数定义语句的参数部分使用
ARGS...TYPE的方式。这将会把...代表的参数全部保存到一个名为ARGS的slice中，注意这些参数的数据类型都是TYPE
*/
/*
map、slice、interface、channel这些数据类型本身就是指针类型的，所以就算是拷贝传值也是拷贝的指针，拷贝
后的参数仍然指向底层的数据结构，所以修改他们 可能会影响外部数据结构的值
*/

//值传递和引用传递是不同的,值传递是先复制再传递，引用传递是地址，如果函数中改变会将把原变量修改

func aa(a int) {
	a = 100
}
func bb(b []int) {
	b[0] = 10
}

func main() {
	x := 10
	aa(x)

	s := []int{1, 2, 3}
	bb(s)

	println(x, s[0])
}